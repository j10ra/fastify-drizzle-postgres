import fs from 'fs';
import path from 'path';

// Directory where the schema files are located
const schemaDirectoryPath = path.join(__dirname, '../src/db/schema');
const outputFile = path.join(schemaDirectoryPath, 'index.ts'); // Output file as index.ts

const files = fs.readdirSync(schemaDirectoryPath);

const imports: string[] = [];
const schemaNames: string[] = [];

files.forEach((file) => {
  if (file.endsWith('.schema.ts') && file !== 'index.ts') {
    const schemaName = file.replace('.schema.ts', 'Schema');

    imports.push(`import ${schemaName} from './${file.replace('.ts', '')}';`);
    schemaNames.push(schemaName);
  }
});

const outputContent = `/**
 * IMPORTANT! This file is auto-generated.
 *
 * DO NOT EDIT THIS FILE DIRECTLY!
 *
 * This file is created by a script when running 'npm run dev' or 'npm run build'.
 * It combines various schema definitions into a single exportable module.
 *
 * Any manual changes made to this file will be overwritten the next time the
 * generation script runs. If you need to modify the schemas, please edit
 * the individual schema files. The script 'scripts/schema.ts' reads all schema
 * files in the 'src/db/schema' directory and combines them into this module.
 *
 * This automated process ensures that our schema definitions are centralized
 * and consistently structured for use throughout the application.
 * use \`npm run schema:generate\` to regenerate this file
 */

${imports.join('\n')}

const schemas = [${schemaNames.join(', ')}];
const combinedSchema = schemas.reduce((acc, schema) => {
  const sym = Symbol.for('drizzle:BaseName');
  const name = schema[sym];

  return {
    ...acc,
    [name]: schema,
  };
}, {});

export default combinedSchema;
`;

console.log('Generating schema index file...');
fs.writeFileSync(outputFile, outputContent);
